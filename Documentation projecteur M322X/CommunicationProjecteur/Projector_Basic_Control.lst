CCS PCH C Compiler, Version 4.121, 35264               10-nov.-15 11:35

               Filename: U:\5eSession\510-COMMUNICATIONS NUMÉRIQUES SANS FIL\CommunicationProjecteur\Projector_Basic_Control.lst

               ROM used: 358 bytes (1%)
                         Largest free fragment is 32410
               RAM used: 6 (0%) at main() level
                         7 (0%) worst case
               Stack:    2 locations

*
0000:  GOTO   0112
.................... #include <18F2580.h> 
.................... //////// Standard Header file for the PIC18F2580 device //////////////// 
.................... #device PIC18F2580 
.................... #list 
....................  
....................  
.................... #fuses HS, NOWDT, PUT,NOPROTECT, NOLVP 
.................... #use delay(clock=20000000) 
0004:  CLRF   FEA
0006:  MOVLW  06
0008:  MOVWF  FE9
000A:  MOVF   FEF,W
000C:  BZ    0028
000E:  MOVLW  06
0010:  MOVWF  01
0012:  CLRF   00
0014:  DECFSZ 00,F
0016:  BRA    0014
0018:  DECFSZ 01,F
001A:  BRA    0012
001C:  MOVLW  7B
001E:  MOVWF  00
0020:  DECFSZ 00,F
0022:  BRA    0020
0024:  DECFSZ FEF,F
0026:  BRA    000E
0028:  RETURN 0
.................... #use RS232(Baud=9600, Xmit=PIN_C6,Rcv=PIN_C7, bits=8, STOP=1) 
*
004A:  BTFSS  F9E.4
004C:  BRA    004A
004E:  MOVWF  FAD
0050:  RETURN 0
....................  
.................... //-----------------------------------------------------// 
....................  
.................... int i; 
....................  
.................... void cligne() 
.................... { 
.................... 	for(i=0;i<5;i++) 
*
002A:  CLRF   04
002C:  MOVF   04,W
002E:  SUBLW  04
0030:  BNC   0040
.................... 	{ 
.................... 		output_toggle(PIN_A5); 
0032:  BCF    F92.5
0034:  BTG    F89.5
.................... 		delay_ms(100); 
0036:  MOVLW  64
0038:  MOVWF  06
003A:  RCALL  0004
.................... 	} 
003C:  INCF   04,F
003E:  BRA    002C
.................... 	output_low(PIN_A5); 
0040:  BCF    F92.5
0042:  BCF    F89.5
.................... 	i=0; 
0044:  CLRF   04
.................... } 
0046:  GOTO   0136 (RETURN)
....................  
.................... void Power_off() //Utiliser un 74LS04 sur TX pour inverser le tout. 
.................... { 
.................... 	putc(0x00);putc(0xBF);putc(0x00);putc(0x00);putc(0x01);putc(0x00);putc(0xC0); 
*
00B2:  MOVLW  00
00B4:  RCALL  004A
00B6:  MOVLW  BF
00B8:  RCALL  004A
00BA:  MOVLW  00
00BC:  RCALL  004A
00BE:  MOVLW  00
00C0:  RCALL  004A
00C2:  MOVLW  01
00C4:  RCALL  004A
00C6:  MOVLW  00
00C8:  RCALL  004A
00CA:  MOVLW  C0
00CC:  RCALL  004A
.................... 	delay_ms(60); 
00CE:  MOVLW  3C
00D0:  MOVWF  06
00D2:  RCALL  0004
.................... 	putc(0x00);putc(0xBF);putc(0x00);putc(0x00);putc(0x01);putc(0x02);putc(0xC2); 
00D4:  MOVLW  00
00D6:  RCALL  004A
00D8:  MOVLW  BF
00DA:  RCALL  004A
00DC:  MOVLW  00
00DE:  RCALL  004A
00E0:  MOVLW  00
00E2:  RCALL  004A
00E4:  MOVLW  01
00E6:  RCALL  004A
00E8:  MOVLW  02
00EA:  RCALL  004A
00EC:  MOVLW  C2
00EE:  RCALL  004A
.................... 	delay_ms(60); 
00F0:  MOVLW  3C
00F2:  MOVWF  06
00F4:  RCALL  0004
.................... 	putc(0x02);putc(0x01);putc(0x00);putc(0x00);putc(0x00);putc(0x03); 
00F6:  MOVLW  02
00F8:  RCALL  004A
00FA:  MOVLW  01
00FC:  RCALL  004A
00FE:  MOVLW  00
0100:  RCALL  004A
0102:  MOVLW  00
0104:  RCALL  004A
0106:  MOVLW  00
0108:  RCALL  004A
010A:  MOVLW  03
010C:  RCALL  004A
.................... } 
010E:  GOTO   0154 (RETURN)
....................  
.................... void Power_on() //Utiliser un 74LS04 sur TX pour inverser le tout. 
.................... { 
.................... 	putc(0x00);putc(0xBF);putc(0x00);putc(0x00);putc(0x01);putc(0x00);putc(0xC0); 
*
0052:  MOVLW  00
0054:  RCALL  004A
0056:  MOVLW  BF
0058:  RCALL  004A
005A:  MOVLW  00
005C:  RCALL  004A
005E:  MOVLW  00
0060:  RCALL  004A
0062:  MOVLW  01
0064:  RCALL  004A
0066:  MOVLW  00
0068:  RCALL  004A
006A:  MOVLW  C0
006C:  RCALL  004A
.................... 	delay_ms(60); 
006E:  MOVLW  3C
0070:  MOVWF  06
0072:  RCALL  0004
.................... 	putc(0x00);putc(0xBF);putc(0x00);putc(0x00);putc(0x01);putc(0x02);putc(0xC2); 
0074:  MOVLW  00
0076:  RCALL  004A
0078:  MOVLW  BF
007A:  RCALL  004A
007C:  MOVLW  00
007E:  RCALL  004A
0080:  MOVLW  00
0082:  RCALL  004A
0084:  MOVLW  01
0086:  RCALL  004A
0088:  MOVLW  02
008A:  RCALL  004A
008C:  MOVLW  C2
008E:  RCALL  004A
.................... 	delay_ms(60); 
0090:  MOVLW  3C
0092:  MOVWF  06
0094:  RCALL  0004
.................... 	putc(0x02);putc(0x00);putc(0x00);putc(0x00);putc(0x00);putc(0x02); 
0096:  MOVLW  02
0098:  RCALL  004A
009A:  MOVLW  00
009C:  RCALL  004A
009E:  MOVLW  00
00A0:  RCALL  004A
00A2:  MOVLW  00
00A4:  RCALL  004A
00A6:  MOVLW  00
00A8:  RCALL  004A
00AA:  MOVLW  02
00AC:  RCALL  004A
.................... } 
00AE:  GOTO   013E (RETURN)
....................  
....................  
.................... //------------------------------------------------------// 
.................... void main (void) 
.................... { 
*
0112:  CLRF   FF8
0114:  BCF    FD0.7
0116:  CLRF   FEA
0118:  CLRF   FE9
011A:  BSF    FB8.3
011C:  MOVLW  08
011E:  MOVWF  FAF
0120:  MOVLW  02
0122:  MOVWF  FB0
0124:  MOVLW  A6
0126:  MOVWF  FAC
0128:  MOVLW  90
012A:  MOVWF  FAB
012C:  MOVF   FC1,W
012E:  ANDLW  C0
0130:  IORLW  0F
0132:  MOVWF  FC1
.................... 	cligne(); 
0134:  BRA    002A
.................... 	while(true) 
.................... 	{ 
.................... 		if(!input(PIN_B0)) 
0136:  BSF    F93.0
0138:  BTFSC  F81.0
013A:  BRA    014C
.................... 		{ 
.................... 			Power_on(); 
013C:  BRA    0052
.................... 			delay_ms(1000); 
013E:  MOVLW  04
0140:  MOVWF  05
0142:  MOVLW  FA
0144:  MOVWF  06
0146:  RCALL  0004
0148:  DECFSZ 05,F
014A:  BRA    0142
.................... 		} 
....................  
.................... 		if(input(PIN_B1)) 
014C:  BSF    F93.1
014E:  BTFSS  F81.1
0150:  BRA    0162
.................... 		{ 
.................... 			Power_off(); 
0152:  BRA    00B2
.................... 			delay_ms(1000); 
0154:  MOVLW  04
0156:  MOVWF  05
0158:  MOVLW  FA
015A:  MOVWF  06
015C:  RCALL  0004
015E:  DECFSZ 05,F
0160:  BRA    0158
.................... 		} 
.................... 	} 
0162:  BRA    0136
.................... } 
0164:  SLEEP 

Configuration Fuses:
   Word  1: C200   HS FCMEN IESO
   Word  2: 1E1E   PUT BROWNOUT BORV21 NOWDT WDT32768
   Word  3: 8600   PBADEN LPT1OSC MCLR
   Word  4: 0091   STVREN NOLVP BBSIZ2K NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
